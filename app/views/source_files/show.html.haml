- if person = @source_file.person and locked_at = @source_file.locked_at
  - status = "Locked by #{person.name} #{time_ago_in_words(locked_at)} ago."
  - classname = "locked"
- elsif last_update = @source_file.last_update
  - status = "Last updated #{time_ago_in_words(last_update)} ago. Message: \"#{@source_file.message}\""
- else
  - status = "Created #{time_ago_in_words(@source_file.created_at)} ago."
- extension = @source_file.name.split(".").last
- case extension
  - when "rb"
    - lang = "ruby"
  - when "pl"
    - lang = "perl"
  - when "py"
    - lang = "python"
  - when "c"
    - lang = "cpp"
  - when "js"
    - lang = "jscript"
  - when "html"
    - lang = "xml"
  - when "patch"
    - lang = "diff"
  - when "haml"
    - lang = "ruby"
  - when "erb"
    - lang = "ruby"
  - else
    - lang = extension
%div#crumbs
  = render :partial => "crumbs"
%div#toolbar
  = render :partial => "show_buttons"
%div#source_file
  %ul
    %li.header
      %ul
        %li.file_name{:title => (@source_file.path_name + @source_file.name)}
          %span= @source_file.path_name + @source_file.name
        - unless status.blank?
          %li.file_status{:title => status, :class => classname}
            %span= status
    %li.content.code
      %pre{:class => "brush: #{lang}"}= @source_file.code
-# add ajax refreshing source file
= render :partial => "show_refresh",
         :object => {:path => source_file_path(:id => @source_file.id, :format => :json)}
:javascript
  $(document).ready(function(){
    SyntaxHighlighter.autoloader(
      '#{lang}  /javascripts/shBrush#{lang.titlecase}.js'
    )
    SyntaxHighlighter.all()
  })